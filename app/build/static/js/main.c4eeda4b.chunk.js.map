{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","App.js","index.js"],"names":["FriendCard","props","className","onClick","handleClick","id","alt","name","src","image","occupation","location","Wrapper","children","App","state","friends","highScore","currentScore","Clicked","shuffleArray","handleScore","console","log","forEach","element","clicked","setState","handleIncrement","shuffledArr","shuffle","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","this","map","key","React","Component","ReactDOM","render","document","getElementById"],"mappings":"45FAwBeA,MAtBf,SAAoBC,GAClB,OACE,yBAAKC,UAAW,OAAQC,QAAS,kBAAMF,EAAMG,YAAaH,EAAMI,MAC9D,yBAAKH,UAAU,iBACb,yBAAKI,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,SAEnC,yBAAKP,UAAU,WACb,4BACE,4BACE,yCADF,IAC0BD,EAAMM,MAEhC,4BACE,+CADF,IACgCN,EAAMS,YAEtC,4BACE,4CADF,IAC6BT,EAAMU,c,MCV9BC,MAJf,SAAiBX,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMY,W,OC8F1BC,G,kNA1FbC,MAAQ,CACNC,UACAC,UAAW,EACXC,aAAc,EACdC,SAAS,G,EAEXf,YAAc,SAAAC,GACZ,EAAKe,eACL,EAAKC,YAAYhB,GACjBiB,QAAQC,IAAI,EAAKR,MAAMI,U,EAGzBE,YAAc,SAAAhB,GACZ,EAAKU,MAAMC,QAAQQ,SAAQ,SAAAC,GACrBpB,IAAOoB,EAAQpB,KAA0B,IAApBoB,EAAQC,SAC/BD,EAAQC,SAAU,EAClB,EAAKC,SAAS,CAAER,SAAS,IACzB,EAAKS,mBACIvB,IAAOoB,EAAQpB,KAA0B,IAApBoB,EAAQC,UAClC,EAAKX,MAAMG,aAAe,EAAKH,MAAME,WACvC,EAAKU,SAAS,CAAEV,UAAW,EAAKF,MAAMG,eAExC,EAAKS,SAAS,CAAET,aAAc,IAC9B,EAAKS,SAAS,CAAER,SAAS,IACzB,EAAKJ,MAAMC,QAAQQ,SAAQ,SAAAC,GAAO,OAAKA,EAAQC,SAAU,KACzDJ,QAAQC,IAAI,EAAKR,MAAMC,c,EAK7BI,aAAe,WAEb,IAAMS,EAAc,EAAKC,QAAQ,EAAKf,MAAMC,SAE5C,EAAKW,SAAS,CAAEE,iB,EAIlBD,gBAAkB,WAEhB,EAAKD,SAAS,CAAET,aAAc,EAAKH,MAAMG,aAAe,K,EAI1DY,QAAU,SAAAC,GAMR,IALA,IACEC,EACAC,EAFEC,EAAeH,EAAMI,OAKlB,IAAMD,GAEXD,EAAcG,KAAKC,MAAMD,KAAKE,SAAWJ,GAIzCF,EAAiBD,EAHjBG,GAAgB,GAIhBH,EAAMG,GAAgBH,EAAME,GAC5BF,EAAME,GAAeD,EAEvB,OAAOD,G,uDAKC,IAAD,OACP,OACE,kBAAC,EAAD,KACE,8CAAoBQ,KAAKxB,MAAMG,cAC/B,2CAAiBqB,KAAKxB,MAAME,WAE1BsB,KAAKxB,MAAMC,QAAQwB,KAAI,SAACf,GACtB,OACE,kBAAC,EAAD,CACEN,QAAS,EAAKJ,MAAMI,QACpBf,YAAa,EAAKA,YAClBqC,IAAKhB,EAAQpB,GACbA,GAAIoB,EAAQpB,GACZE,KAAMkB,EAAQlB,KACdE,MAAOgB,EAAQhB,MACfC,WAAYe,EAAQf,WACpBC,SAAUc,EAAQd,mB,GAnFhB+B,IAAMC,Y,MCDxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.c4eeda4b.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\nfunction FriendCard(props) {\n  return (\n    <div className={\"card\"} onClick={() => props.handleClick( props.id)}>\n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image} />\n      </div>\n      <div className=\"content\">\n        <ul>\n          <li>\n            <strong>Name:</strong> {props.name}\n          </li>\n          <li>\n            <strong>Occupation:</strong> {props.occupation}\n          </li>\n          <li>\n            <strong>Address:</strong> {props.location}\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport friends from \"./friends.json\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  // Setting the initial state of the Counter component\n  state = {\n    friends,\n    highScore: 0,\n    currentScore: 0,\n    Clicked: false\n  };\n  handleClick = id => {\n    this.shuffleArray();\n    this.handleScore(id);\n    console.log(this.state.Clicked);\n  };\n\n  handleScore = id => {\n    this.state.friends.forEach(element => {\n      if (id === element.id && element.clicked === false) {\n        element.clicked = true;\n        this.setState({ Clicked: false });\n        this.handleIncrement();\n      } else if (id === element.id && element.clicked === true) {\n        if (this.state.currentScore > this.state.highScore) {\n          this.setState({ highScore: this.state.currentScore });\n        }\n        this.setState({ currentScore: 0 });\n        this.setState({ Clicked: true });\n        this.state.friends.forEach(element => (element.clicked = false));\n        console.log(this.state.friends);\n      }\n    });\n  };\n\n  shuffleArray = () => {\n    // Shuffle array of objects\n    const shuffledArr = this.shuffle(this.state.friends);\n    // Setting 'shuffledArr' as the new state\n    this.setState({ shuffledArr });\n  };\n\n  // handleIncrement increments this.state.currentScore by 1\n  handleIncrement = () => {\n    // Using setState method to update component's state\n    this.setState({ currentScore: this.state.currentScore + 1 });\n  };\n\n  // Function that takes an array as a parameter and shuffles it\n  shuffle = array => {\n    var currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n    return array;\n  };\n\n\n  // The render method returns the JSX that should be rendered\n  render() {\n    return (\n      <Wrapper>\n        <h1>Current Score= {this.state.currentScore}</h1>\n        <h1>High Score= {this.state.highScore}</h1> \n        {\n          this.state.friends.map((element) => {\n            return (\n              <FriendCard\n                Clicked={this.state.Clicked}\n                handleClick={this.handleClick}\n                key={element.id}\n                id={element.id}\n                name={element.name}\n                image={element.image}\n                occupation={element.occupation}\n                location={element.location}\n              />\n            )\n          })\n        }\n      </Wrapper>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}